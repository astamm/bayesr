% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{robustness_analysis}
\alias{robustness_analysis}
\title{Robustness of log-Euclidean and Bayes geometries to MRI-induced noise}
\usage{
robustness_analysis(tensor, n = 8L, B = 1000L, lambda = 1)
}
\arguments{
\item{tensor}{A reference tensor.}

\item{n}{Sample size (default: \code{8L}).}

\item{B}{Number of independent noisy samples (default: \code{1000L}).}

\item{lambda}{A scalar between 0 and 1 specifying how much trust do we have
in the reference measure, which is assigned a weight of \code{1 - lambda}
(default: 1).}
}
\value{
A \code{\link[tibble]{tibble}} with simulation results.
}
\description{
Robustness of log-Euclidean and Bayes geometries to MRI-induced noise
}
\examples{
arrow <- ggplot2::arrow(length = ggplot2::unit(0.4, "cm"), type = "closed")

refIsotropicTensor <- diag(3e-3, 3L)
data_isotropic <- robustness_analysis(refIsotropicTensor, B = 100L)

data_isotropic$data \%>\%
 ggplot2::ggplot(ggplot2::aes(x = Sigma, y = MSE, col = Space)) +
 ggplot2::geom_point() +
 ggplot2::geom_line() +
 ggplot2::theme_minimal() +
 ggplot2::theme(legend.position = "top",
                axis.line = ggplot2::element_line(arrow = arrow)) +
 ggplot2::facet_grid(Metric ~ ., scales = "free") +
 ggplot2::scale_x_continuous(labels = scales::percent) +
 ggplot2::scale_y_log10()

refAnisotropicTensor <- diag(c(1.71e-3, 3e-4, 1e-4))
data_fascicles <- tibble::tibble()
theta <- pi * c(0, 1/6, 1/4, 1/3, 1/2)
for (a in theta) {
 R <- rbind(
   c(cos(a), sin(a), 0),
   c(-sin(a), cos(a), 0),
   c(0, 0, 1)
 )
 ref_tmp <- R \%*\% refAnisotropicTensor \%*\% t(R)
 tmp <- robustness_analysis(ref_tmp, B = 100L, lambda = 0.2)
 data_fascicles <- dplyr::bind_rows(
   data_fascicles,
   tmp$data \%>\% dplyr::mutate(Angle = round(a, 4L))
 )
}

data_fascicles \%>\%
  ggplot2::ggplot(ggplot2::aes(x = Sigma, y = MSE, col = Space)) +
  ggplot2::geom_point() +
  ggplot2::geom_line() +
  ggplot2::theme_minimal() +
  ggplot2::theme(legend.position = "top",
                 axis.line = ggplot2::element_line(arrow = arrow)) +
  ggplot2::facet_grid(Metric ~ Angle, scales = "free") +
  ggplot2::scale_x_continuous(labels = scales::percent) +
  ggplot2::scale_y_log10()
}
